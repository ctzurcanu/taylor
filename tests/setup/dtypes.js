const theader = {
  uint: '11',
  int: '12',
  byte: '22',
  array: '44',
  narray: '45',
  tuple: 'ee',
}

const sizedt = base => (size = 0) => base + size.toString(16).padStart(6, '0');
const uint = (size = 0) => sizedt(theader.uint)(size);
const int = (size = 0) => sizedt(theader.int)(size);
const bytes = (size = 0) => sizedt(theader.byte)(size);
const array = (size = 0) => sizedt(theader.array)(size);
const narray = (size = 0) => sizedt(theader.narray)(size);
const tuple = (size = 0) => sizedt(theader.tuple)(size);
const base = {sizedt, uint, int, bytes, array, narray, tuple};

const typed = type => size => hexvalue => base[type](size) + hexvalue;



const defs_new = {
  uint: `0xfffffffe0000000511000000030000000dee0000010000000522000001110000001d3333333800000000333333350000000200023333333000000003010003`,
  int: `0xfffffffe0000000512000000030000000dee0000010000000522000001120000001d3333333800000000333333350000000200023333333000000003010003`,
  array: `0xfffffffe0000000544000000040000000dee0000010000000522000001440000002833333337000000010133333335000000020003333333290000000103333333300000000402000504`,
  narray: `0xfffffffe0000000545000000070000003cee000005000000050000000d000000150000001c000000242200000145220000043333333322000004333333301100000300000122000004220000040000004833333337000000020001333333310000000304020633333335000000020908333333290000000108333333280000000305070333333332000000020c0233333330000000030d0b0a`,
  union: `0xfffffffe00000005330000000100000000000000093333333400000001ff`,
}

const defs_funcs = {
  castarray: '0xfffffffe00000005777777770200000010ee00000100000008220000043333331c000000143333333700000001003333331b00000003020301',
  castarray2: '0xfffffffe00000005777777880300000026ee000003000000070000000e000000161100000300000411000003000002220000043333331c0000001f3333331a000000030203003333332800000002040533333332000000020601',
}

module.exports = {
  base,
  defs_new,
  defs_funcs,
}
